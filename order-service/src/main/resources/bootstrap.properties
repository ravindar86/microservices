# need to fetch the details from configuration server for order-service
spring.cloud.config.uri=http://localhost:8888
#for actuator refresh
management.endpoints.web.exposure.include=*

server.port=8084
spring.application.name=order-service
#eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.datasource.url = jdbc:mysql://localhost:3306/order_service_db


spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.cloud.loadbalance.ribbon.enabled=false

# to resolve the error of 'class org.springframework.cloud.sleuth.instrument.circuitbreaker.TraceCircuitBreaker cannot be cast to class org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JCircuitBreaker'
spring.sleuth.circuitbreaker.enabled=false

resilience4j.timelimiter.instances.order-service.timeout-duration=5s

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservices-realm

# output binder (out) and 0 (index of output binding)
spring.cloud.stream.bindings.notificationEventSupplier-out-0.destination=notification-events

# to create stream bridge and enable source bindings
spring.cloud.stream.source=notificationEventSupplier

#spring.sleuth.integration.enabled=true

#Zipkin configuration
#spring.zipkin.base-url=http://localhost:9411/
#spring.sleuth.sampler.probability=1

